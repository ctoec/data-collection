/* tslint:disable */
/* eslint-disable */
/**
 * data-collection
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface FlattenedEnrollment
 */
export interface FlattenedEnrollment {
  /**
   *
   * @type {number}
   * @memberof FlattenedEnrollment
   */
  sasid?: number;
  /**
   *
   * @type {string}
   * @memberof FlattenedEnrollment
   */
  name?: string;
  /**
   *
   * @type {Date}
   * @memberof FlattenedEnrollment
   */
  dateOfBirth?: Date;
  /**
   *
   * @type {string}
   * @memberof FlattenedEnrollment
   */
  birthCertificateId?: string;
  /**
   *
   * @type {string}
   * @memberof FlattenedEnrollment
   */
  townOfBirth?: string;
  /**
   *
   * @type {string}
   * @memberof FlattenedEnrollment
   */
  stateOfBirth?: string;
  /**
   *
   * @type {string}
   * @memberof FlattenedEnrollment
   */
  race?: string;
  /**
   *
   * @type {string}
   * @memberof FlattenedEnrollment
   */
  ethnicity?: string;
  /**
   *
   * @type {string}
   * @memberof FlattenedEnrollment
   */
  gender?: string;
  /**
   *
   * @type {boolean}
   * @memberof FlattenedEnrollment
   */
  receivingSpecialEducationServices?: boolean;
  /**
   *
   * @type {string}
   * @memberof FlattenedEnrollment
   */
  specialEducationServicesType?: string;
  /**
   *
   * @type {string}
   * @memberof FlattenedEnrollment
   */
  address?: string;
  /**
   *
   * @type {boolean}
   * @memberof FlattenedEnrollment
   */
  livesWithFosterFamily?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof FlattenedEnrollment
   */
  experiencedHomelessnessOrHousingInsecurity?: boolean;
  /**
   *
   * @type {number}
   * @memberof FlattenedEnrollment
   */
  householdSize?: number;
  /**
   *
   * @type {number}
   * @memberof FlattenedEnrollment
   */
  annualHouseholdIncome?: number;
  /**
   *
   * @type {Date}
   * @memberof FlattenedEnrollment
   */
  incomeDeterminationDate?: Date;
  /**
   *
   * @type {Date}
   * @memberof FlattenedEnrollment
   */
  enrollmentStartDate?: Date;
  /**
   *
   * @type {Date}
   * @memberof FlattenedEnrollment
   */
  enrollmentEndDate?: Date;
  /**
   *
   * @type {string}
   * @memberof FlattenedEnrollment
   */
  enrollmentExitReason?: string;
  /**
   *
   * @type {string}
   * @memberof FlattenedEnrollment
   */
  firstFundingPeriod?: string;
  /**
   *
   * @type {string}
   * @memberof FlattenedEnrollment
   */
  lastFundingPeriod?: string;
  /**
   *
   * @type {string}
   * @memberof FlattenedEnrollment
   */
  site?: string;
  /**
   *
   * @type {string}
   * @memberof FlattenedEnrollment
   */
  ageGroup?: string;
  /**
   *
   * @type {string}
   * @memberof FlattenedEnrollment
   */
  fundingType?: string;
  /**
   *
   * @type {string}
   * @memberof FlattenedEnrollment
   */
  spaceType?: string;
  /**
   *
   * @type {string}
   * @memberof FlattenedEnrollment
   */
  model?: string;
  /**
   *
   * @type {boolean}
   * @memberof FlattenedEnrollment
   */
  receivingCareForKids?: boolean;
}

export function FlattenedEnrollmentFromJSON(json: any): FlattenedEnrollment {
  return FlattenedEnrollmentFromJSONTyped(json, false);
}

export function FlattenedEnrollmentFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): FlattenedEnrollment {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    sasid: !exists(json, 'sasid') ? undefined : json['sasid'],
    name: !exists(json, 'name') ? undefined : json['name'],
    dateOfBirth: !exists(json, 'dateOfBirth')
      ? undefined
      : new Date(json['dateOfBirth']),
    birthCertificateId: !exists(json, 'birthCertificateId')
      ? undefined
      : json['birthCertificateId'],
    townOfBirth: !exists(json, 'townOfBirth') ? undefined : json['townOfBirth'],
    stateOfBirth: !exists(json, 'stateOfBirth')
      ? undefined
      : json['stateOfBirth'],
    race: !exists(json, 'race') ? undefined : json['race'],
    ethnicity: !exists(json, 'ethnicity') ? undefined : json['ethnicity'],
    gender: !exists(json, 'gender') ? undefined : json['gender'],
    receivingSpecialEducationServices: !exists(
      json,
      'receivingSpecialEducationServices'
    )
      ? undefined
      : json['receivingSpecialEducationServices'],
    specialEducationServicesType: !exists(json, 'specialEducationServicesType')
      ? undefined
      : json['specialEducationServicesType'],
    address: !exists(json, 'address') ? undefined : json['address'],
    livesWithFosterFamily: !exists(json, 'livesWithFosterFamily')
      ? undefined
      : json['livesWithFosterFamily'],
    experiencedHomelessnessOrHousingInsecurity: !exists(
      json,
      'experiencedHomelessnessOrHousingInsecurity'
    )
      ? undefined
      : json['experiencedHomelessnessOrHousingInsecurity'],
    householdSize: !exists(json, 'householdSize')
      ? undefined
      : json['householdSize'],
    annualHouseholdIncome: !exists(json, 'annualHouseholdIncome')
      ? undefined
      : json['annualHouseholdIncome'],
    incomeDeterminationDate: !exists(json, 'incomeDeterminationDate')
      ? undefined
      : new Date(json['incomeDeterminationDate']),
    enrollmentStartDate: !exists(json, 'enrollmentStartDate')
      ? undefined
      : new Date(json['enrollmentStartDate']),
    enrollmentEndDate: !exists(json, 'enrollmentEndDate')
      ? undefined
      : new Date(json['enrollmentEndDate']),
    enrollmentExitReason: !exists(json, 'enrollmentExitReason')
      ? undefined
      : json['enrollmentExitReason'],
    firstFundingPeriod: !exists(json, 'firstFundingPeriod')
      ? undefined
      : json['firstFundingPeriod'],
    lastFundingPeriod: !exists(json, 'lastFundingPeriod')
      ? undefined
      : json['lastFundingPeriod'],
    site: !exists(json, 'site') ? undefined : json['site'],
    ageGroup: !exists(json, 'ageGroup') ? undefined : json['ageGroup'],
    fundingType: !exists(json, 'fundingType') ? undefined : json['fundingType'],
    spaceType: !exists(json, 'spaceType') ? undefined : json['spaceType'],
    model: !exists(json, 'model') ? undefined : json['model'],
    receivingCareForKids: !exists(json, 'receivingCareForKids')
      ? undefined
      : json['receivingCareForKids'],
  };
}

export function FlattenedEnrollmentToJSON(
  value?: FlattenedEnrollment | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    sasid: value.sasid,
    name: value.name,
    dateOfBirth:
      value.dateOfBirth === undefined
        ? undefined
        : value.dateOfBirth.toISOString(),
    birthCertificateId: value.birthCertificateId,
    townOfBirth: value.townOfBirth,
    stateOfBirth: value.stateOfBirth,
    race: value.race,
    ethnicity: value.ethnicity,
    gender: value.gender,
    receivingSpecialEducationServices: value.receivingSpecialEducationServices,
    specialEducationServicesType: value.specialEducationServicesType,
    address: value.address,
    livesWithFosterFamily: value.livesWithFosterFamily,
    experiencedHomelessnessOrHousingInsecurity:
      value.experiencedHomelessnessOrHousingInsecurity,
    householdSize: value.householdSize,
    annualHouseholdIncome: value.annualHouseholdIncome,
    incomeDeterminationDate:
      value.incomeDeterminationDate === undefined
        ? undefined
        : value.incomeDeterminationDate.toISOString(),
    enrollmentStartDate:
      value.enrollmentStartDate === undefined
        ? undefined
        : value.enrollmentStartDate.toISOString(),
    enrollmentEndDate:
      value.enrollmentEndDate === undefined
        ? undefined
        : value.enrollmentEndDate.toISOString(),
    enrollmentExitReason: value.enrollmentExitReason,
    firstFundingPeriod: value.firstFundingPeriod,
    lastFundingPeriod: value.lastFundingPeriod,
    site: value.site,
    ageGroup: value.ageGroup,
    fundingType: value.fundingType,
    spaceType: value.spaceType,
    model: value.model,
    receivingCareForKids: value.receivingCareForKids,
  };
}
