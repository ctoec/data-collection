/* tslint:disable */
/* eslint-disable */
/**
 * data-collection
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
  AgeGroup,
  AgeGroupFromJSON,
  AgeGroupFromJSONTyped,
  AgeGroupToJSON,
  FundingSource,
  FundingSourceFromJSON,
  FundingSourceFromJSONTyped,
  FundingSourceToJSON,
  FundingTime,
  FundingTimeFromJSON,
  FundingTimeFromJSONTyped,
  FundingTimeToJSON,
  FundingTimeSplit,
  FundingTimeSplitFromJSON,
  FundingTimeSplitFromJSONTyped,
  FundingTimeSplitToJSON,
  Organization,
  OrganizationFromJSON,
  OrganizationFromJSONTyped,
  OrganizationToJSON,
} from './';

/**
 *
 * @export
 * @interface FundingSpace
 */
export interface FundingSpace {
  /**
   *
   * @type {number}
   * @memberof FundingSpace
   */
  id: number;
  /**
   *
   * @type {number}
   * @memberof FundingSpace
   */
  capacity: number;
  /**
   *
   * @type {Organization}
   * @memberof FundingSpace
   */
  organization: Organization;
  /**
   *
   * @type {FundingSource}
   * @memberof FundingSpace
   */
  source: FundingSource;
  /**
   *
   * @type {AgeGroup}
   * @memberof FundingSpace
   */
  ageGroup: AgeGroup;
  /**
   *
   * @type {FundingTime}
   * @memberof FundingSpace
   */
  time: FundingTime;
  /**
   *
   * @type {FundingTimeSplit}
   * @memberof FundingSpace
   */
  timeSplit?: FundingTimeSplit;
}

export function FundingSpaceFromJSON(json: any): FundingSpace {
  return FundingSpaceFromJSONTyped(json, false);
}

export function FundingSpaceFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): FundingSpace {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json['id'],
    capacity: json['capacity'],
    organization: OrganizationFromJSON(json['organization']),
    source: FundingSourceFromJSON(json['source']),
    ageGroup: AgeGroupFromJSON(json['ageGroup']),
    time: FundingTimeFromJSON(json['time']),
    timeSplit: !exists(json, 'timeSplit')
      ? undefined
      : FundingTimeSplitFromJSON(json['timeSplit']),
  };
}

export function FundingSpaceToJSON(value?: FundingSpace | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    capacity: value.capacity,
    organization: OrganizationToJSON(value.organization),
    source: FundingSourceToJSON(value.source),
    ageGroup: AgeGroupToJSON(value.ageGroup),
    time: FundingTimeToJSON(value.time),
    timeSplit: FundingTimeSplitToJSON(value.timeSplit),
  };
}
