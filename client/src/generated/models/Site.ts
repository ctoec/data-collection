/* tslint:disable */
/* eslint-disable */
/**
 * data-collection
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
  Enrollment,
  EnrollmentFromJSON,
  EnrollmentFromJSONTyped,
  EnrollmentToJSON,
  Organization,
  OrganizationFromJSON,
  OrganizationFromJSONTyped,
  OrganizationToJSON,
  Region,
  RegionFromJSON,
  RegionFromJSONTyped,
  RegionToJSON,
} from './';

/**
 *
 * @export
 * @interface Site
 */
export interface Site {
  /**
   *
   * @type {number}
   * @memberof Site
   */
  id: number;
  /**
   *
   * @type {string}
   * @memberof Site
   */
  name: string;
  /**
   *
   * @type {boolean}
   * @memberof Site
   */
  titleI: boolean;
  /**
   *
   * @type {Region}
   * @memberof Site
   */
  region: Region;
  /**
   *
   * @type {number}
   * @memberof Site
   */
  facilityCode?: number;
  /**
   *
   * @type {number}
   * @memberof Site
   */
  licenseNumber?: number;
  /**
   *
   * @type {number}
   * @memberof Site
   */
  naeycId?: number;
  /**
   *
   * @type {number}
   * @memberof Site
   */
  registryId?: number;
  /**
   *
   * @type {Organization}
   * @memberof Site
   */
  organization: Organization;
  /**
   *
   * @type {Array<Enrollment>}
   * @memberof Site
   */
  enrollments?: Array<Enrollment>;
}

export function SiteFromJSON(json: any): Site {
  return SiteFromJSONTyped(json, false);
}

export function SiteFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): Site {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json['id'],
    name: json['name'],
    titleI: json['titleI'],
    region: RegionFromJSON(json['region']),
    facilityCode: !exists(json, 'facilityCode')
      ? undefined
      : json['facilityCode'],
    licenseNumber: !exists(json, 'licenseNumber')
      ? undefined
      : json['licenseNumber'],
    naeycId: !exists(json, 'naeycId') ? undefined : json['naeycId'],
    registryId: !exists(json, 'registryId') ? undefined : json['registryId'],
    organization: OrganizationFromJSON(json['organization']),
    enrollments: !exists(json, 'enrollments')
      ? undefined
      : (json['enrollments'] as Array<any>).map(EnrollmentFromJSON),
  };
}

export function SiteToJSON(value?: Site | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    name: value.name,
    titleI: value.titleI,
    region: RegionToJSON(value.region),
    facilityCode: value.facilityCode,
    licenseNumber: value.licenseNumber,
    naeycId: value.naeycId,
    registryId: value.registryId,
    organization: OrganizationToJSON(value.organization),
    enrollments:
      value.enrollments === undefined
        ? undefined
        : (value.enrollments as Array<any>).map(EnrollmentToJSON),
  };
}
