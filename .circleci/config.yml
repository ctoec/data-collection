version: 2.1

orbs:
  node: circleci/node@4.0.0

jobs:
  install:
    docker:
      - image: 906392371336.dkr.ecr.us-east-2.amazonaws.com/oec/node:12
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
          cache-path: node_modules
      - node/install-packages:
          pkg-manager: yarn
          app-dir: ./client
          cache-path: node_modules
          override-ci-command: yarn install --frozen-lockfile --network-concurrency 1
      # Save workspace for subsequent jobs
      - persist_to_workspace:
          root: .
          paths:
            - .
  build:
    parameters:
      env:
        description: "The environment to deploy Fawkes to (qa, devsecure, staging)"
        type: string
    docker:
      - image: 906392371336.dkr.ecr.us-east-2.amazonaws.com/oec/node:12
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Build Express server
          command: yarn build
      - run:
          working_directory: client
          name: Build React app
          # move server node_modules so they don't interfere with preflight checks for the client node_modules
          # (yarn looks for node_modules in parent directories)
          command: mv ../node_modules ../IGNORE && CI="" REACT_APP_STAGE="<< parameters.env >>" yarn build && mv ../IGNORE ../node_modules
      - persist_to_workspace:
          root: .
          paths:
            - .
  test:
    docker:
      - image: 906392371336.dkr.ecr.us-east-2.amazonaws.com/oec/node:12
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run npm audit for back-end dependencies
          command: yarn audit
      - run:
          name: Run npm audit for front-end dependencies
          command: cd client && yarn audit
      - run:
          name: Run back-end tests
          command: yarn run test
      - run:
          name: Run front-end tests
          working_directory: client
          # skip pre-flight checks to avoid the parent-directory node_module issues
          command: SKIP_PREFLIGHT_CHECK=true yarn run test

  deploy:
    description: "Job for deploying Fawkes to the specified environment"
    parameters:
      env:
        description: "The environment to deploy Fawkes to (qa, devsecure, staging)"
        type: string
    docker:
      - image: 906392371336.dkr.ecr.us-east-2.amazonaws.com/oec/node:12
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install Elastic Beanstalk CLI
          working_directory: /
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install python3-pip python3-dev build-essential
            sudo pip3 install awsebcli
      - run: 
          name: Initialize Elastic Beanstalk
          command: eb init ece-fawkes-<< parameters.env >>-app --region us-east-2 --platform node.js
      - run: 
          name: Deploy to Elastic Beanstalk environment
          command: eb deploy ece-fawkes-<< parameters.env >>-env


workflows:
  build-and-test:
    jobs:
      - install
      - build:
          env: staging
          requires:
            - install
      - test:
          requires:
            - build
      - deploy:
          env: staging
          requires:
            - test
          filters:
            branches:
              only: base
  deploy-to-staging:
    jobs:
      - hold:
          type: approval
      - install:
          requires: 
            - hold
      - build:
          env: staging
          requires:
            - install
      - deploy:
          env: staging
          requires:
            - build
  deploy-to-qa:
    jobs:
      - hold:
          type: approval
      - install:
          requires: 
            - hold
      - build:
          env: qa
          requires:
            - install
      - deploy:
          env: qa
          requires:
            - build
  deploy-to-devsecure:
    jobs:
      - hold:
          type: approval
      - install:
          requires: 
            - hold
      - build:
          env: devsecure
          requires:
            - install
      - deploy:
          env: devsecure
          requires:
            - build
